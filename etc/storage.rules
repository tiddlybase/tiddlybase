rules_version = '2';
service firebase.storage {
    match /b/{bucket}/o {
        // Files look like: "/wiki/<wikiName>/user/<UID>/<random>/file.txt"
        match /csaladwiki/{allPaths=**} {
            function getRole() {
                return request.auth.token[role];
            }
            function isAuthenticated() {
                return request.auth.uid != null;
            }
            function isOwner() {
                return isAuthenticated() && request.auth.uid == userId;
            }
            function hasReadAccess() {
              let READER_ROLE = 2;
              return isOwner() || getRole() >= READER_ROLE;
            }
            function fileOK() {
                let MAX_SIZE = 100 * 1024 * 1024; // 100MB given in bytes
                // Note: to verify MIME type, use:
                // request.resource.contentType.matches('image/.*');
                return request.resource.size < MAX_SIZE; 
            }
            function isAdmin() {
                let ADMIN_ROLE = 4;
                return getRole() >= ADMIN_ROLE;
            }
            // anyone can read the files if the know the URL
            allow get: if true;
            // get file lists if they have read access
            allow list: if hasReadAccess();
            // don't allow updates:
            allow update: if false;
            // only owner can upload and only if the file is legit.
            allow create: if isOwner() && fileOK();
            // owner or admin can delete
            allow delete: if isOwner() || isAdmin();
        }
    }
}
